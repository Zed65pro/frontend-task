{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Form.js\";\nimport React from 'react';\nimport './Form.css';\nimport Button from '../UI/Button';\nimport FormInput from './FormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  const inputs = [{\n    id: 1,\n    name: \"Id\",\n    type: \"number\",\n    placeholder: \"id\",\n    errorMessage: \"Id should be a number\",\n    label: \"id\",\n    pattern: \"^[0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 3,\n    name: \"birthday\",\n    type: \"date\",\n    placeholder: \"Birthday\",\n    label: \"Birthday\"\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 5,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    errorMessage: \"Passwords don't match!\",\n    label: \"Confirm Password\",\n    pattern: values.password,\n    required: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Button","FormInput","Form","props","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","values","password","handleSubmit","map","input","onChange"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Form.js"],"sourcesContent":["import React from 'react'\nimport './Form.css';\nimport Button from '../UI/Button';\nimport FormInput from './FormInput';\nconst Form = (props) => {\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"Id\",\n      type: \"number\",\n      placeholder: \"id\",\n      errorMessage:\n        \"Id should be a number\",\n      label: \"id\",\n      pattern: \"^[0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"birthday\",\n      type: \"date\",\n      placeholder: \"Birthday\",\n      label: \"Birthday\",\n    },\n    {\n      id: 4,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      errorMessage:\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n      label: \"Password\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n      required: true,\n    },\n    {\n      id: 5,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Passwords don't match!\",\n      label: \"Confirm Password\",\n      pattern: values.password,\n      required: true,\n    },\n  ];\n\n\n  return (\n    <div className=\"modal\">\n        <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <Button>Submit</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAEtB,MAAMC,MAAM,GAAG,CACb;IACEC,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,IAFR;IAGEC,IAAI,EAAE,QAHR;IAIEC,WAAW,EAAE,IAJf;IAKEC,YAAY,EACV,uBANJ;IAOEC,KAAK,EAAE,IAPT;IAQEC,OAAO,EAAE,eARX;IASEC,QAAQ,EAAE;EATZ,CADa,EAYb;IACEP,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE,OAHR;IAIEC,WAAW,EAAE,OAJf;IAKEC,YAAY,EAAE,qCALhB;IAMEC,KAAK,EAAE,OANT;IAOEE,QAAQ,EAAE;EAPZ,CAZa,EAqBb;IACEP,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,UAJf;IAKEE,KAAK,EAAE;EALT,CArBa,EA4Bb;IACEL,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,UAHR;IAIEC,WAAW,EAAE,UAJf;IAKEC,YAAY,EACV,qGANJ;IAOEC,KAAK,EAAE,UAPT;IAQEC,OAAO,EAAG,sEARZ;IASEC,QAAQ,EAAE;EATZ,CA5Ba,EAuCb;IACEP,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,iBAFR;IAGEC,IAAI,EAAE,UAHR;IAIEC,WAAW,EAAE,kBAJf;IAKEC,YAAY,EAAE,wBALhB;IAMEC,KAAK,EAAE,kBANT;IAOEC,OAAO,EAAEE,MAAM,CAACC,QAPlB;IAQEF,QAAQ,EAAE;EARZ,CAvCa,CAAf;EAoDA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACI;MAAM,QAAQ,EAAEG,YAAhB;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,EAECX,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD,OAEMA,KAFN;QAGE,KAAK,EAAEJ,MAAM,CAACI,KAAK,CAACX,IAAP,CAHf;QAIE,QAAQ,EAAEY;MAJZ,GACOD,KAAK,CAACZ,EADb;QAAA;QAAA;QAAA;MAAA,QADD,CAFD,eAUA,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAtED;;KAAMH,I;AAwEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}