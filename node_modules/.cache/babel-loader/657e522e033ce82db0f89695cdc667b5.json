{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport TaskList from \"./TaskList\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = props => {\n  _s();\n\n  const [isShowTasks, setIsShowTasks] = useState(false);\n  const [isCreateTask, setIsCreateTask] = useState(false);\n  const [isManageTask, setIsManageTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState({\n    id: \"0\",\n    projectName: \"\",\n    taskName: \"\",\n    status: \"inactive\"\n  });\n\n  const showTaskHandler = () => {\n    setIsShowTasks(prevState => !prevState);\n  };\n\n  const createTaskHandler = () => {\n    setIsCreateTask(prevState => !prevState);\n  };\n\n  const manageTaskHandler = task => {\n    setIsManageTask(prevState => !prevState);\n    setSelectedTask(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: showTaskHandler,\n      children: \"Show tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createTaskHandler,\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isManageTask && /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Delete task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), isManageTask && /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Update task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this), isCreateTask && /*#__PURE__*/_jsxDEV(Form, {\n      tasks: props.tasks,\n      createTaskHandler: createTaskHandler,\n      title: \"Create Task\",\n      task: selectedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), isShowTasks && /*#__PURE__*/_jsxDEV(TaskList, {\n      manageTaskHandler: manageTaskHandler,\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"sNYGfWrTMYMzBpx0LqdOSDYwjI0=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","Button","TaskList","Form","Body","props","isShowTasks","setIsShowTasks","isCreateTask","setIsCreateTask","isManageTask","setIsManageTask","selectedTask","setSelectedTask","id","projectName","taskName","status","showTaskHandler","prevState","createTaskHandler","manageTaskHandler","task","tasks"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Body.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport TaskList from \"./TaskList\";\nimport Form from \"./Form\";\n\nconst Body = (props) => {\n  const [isShowTasks, setIsShowTasks] = useState(false);\n  const [isCreateTask, setIsCreateTask] = useState(false);\n  const [isManageTask, setIsManageTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState({\n    id: \"0\",\n    projectName: \"\",\n    taskName: \"\",\n    status: \"inactive\",\n  });\n\n  const showTaskHandler = () => {\n    setIsShowTasks((prevState) => !prevState);\n  };\n\n  const createTaskHandler = () => {\n    setIsCreateTask((prevState) => !prevState);\n  };\n\n  const manageTaskHandler = (task) => {\n    setIsManageTask((prevState) => !prevState);\n    setSelectedTask(task);\n  };\n  return (\n    <div>\n      <Button onClick={showTaskHandler}>Show tasks</Button>\n      <Button onClick={createTaskHandler}>Create task</Button>\n      {isManageTask && <Button>Delete task</Button>}\n      {isManageTask && <Button>Update task</Button>}\n      {isCreateTask && (\n        <Form\n          tasks={props.tasks}\n          createTaskHandler={createTaskHandler}\n          title={\"Create Task\"}\n          task = {selectedTask}\n        />\n      )}\n      {isShowTasks && (\n        <TaskList manageTaskHandler={manageTaskHandler} tasks={props.tasks} />\n      )}\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC;IAC/Cc,EAAE,EAAE,GAD2C;IAE/CC,WAAW,EAAE,EAFkC;IAG/CC,QAAQ,EAAE,EAHqC;IAI/CC,MAAM,EAAE;EAJuC,CAAD,CAAhD;;EAOA,MAAMC,eAAe,GAAG,MAAM;IAC5BX,cAAc,CAAEY,SAAD,IAAe,CAACA,SAAjB,CAAd;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAG,MAAM;IAC9BX,eAAe,CAAEU,SAAD,IAAe,CAACA,SAAjB,CAAf;EACD,CAFD;;EAIA,MAAME,iBAAiB,GAAIC,IAAD,IAAU;IAClCX,eAAe,CAAEQ,SAAD,IAAe,CAACA,SAAjB,CAAf;IACAN,eAAe,CAACS,IAAD,CAAf;EACD,CAHD;;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAEJ,eAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAEE,iBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGV,YAAY,iBAAI,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHnB,EAIGA,YAAY,iBAAI,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJnB,EAKGF,YAAY,iBACX,QAAC,IAAD;MACE,KAAK,EAAEH,KAAK,CAACkB,KADf;MAEE,iBAAiB,EAAEH,iBAFrB;MAGE,KAAK,EAAE,aAHT;MAIE,IAAI,EAAIR;IAJV;MAAA;MAAA;MAAA;IAAA,QANJ,EAaGN,WAAW,iBACV,QAAC,QAAD;MAAU,iBAAiB,EAAEe,iBAA7B;MAAgD,KAAK,EAAEhB,KAAK,CAACkB;IAA7D;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA1CD;;GAAMnB,I;;KAAAA,I;AA4CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}