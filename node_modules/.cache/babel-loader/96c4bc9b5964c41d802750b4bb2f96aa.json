{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"../UI/Button\";\nimport FormInput from \"./FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    id: \"\",\n    projectName: \"\",\n    taskName: \"\",\n    status: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"id\",\n    type: \"number\",\n    placeholder: \"Id\",\n    errorMessage: \"Id should be a number\",\n    label: \"Id\",\n    pattern: \"^[0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"projectName\",\n    type: \"text\",\n    placeholder: \"project name\",\n    errorMessage: \"This field cannot be left empty.\",\n    label: \"Project name\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 3,\n    name: \"taskName\",\n    type: \"text\",\n    placeholder: \"Task name\",\n    errorMessage: \"This field cannot be left empty.\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    label: \"Task name\",\n    required: true\n  }, {\n    id: 4,\n    name: \"status\",\n    type: \"text\",\n    placeholder: \"Status\",\n    errorMessage: \"You must choose a status for the task.\",\n    label: \"Status\",\n    pattern: \"inactive\" || \"active\" || \"in-progress\",\n    required: true\n  }];\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const updateTaskHandler = () => {\n    const index = props.tasks.indexOf(props.task);\n    props.tasks[index] = {\n      id: values.id,\n      projectName: values.projectName,\n      taskName: values.taskName,\n      status: values.status\n    };\n  };\n\n  const createTaskHandler = () => {};\n\n  const deleteTaskHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n        value: props.title === \"Update Task\" ? props.task[input.name] : values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)), props.title === \"Create Task\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-create\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: createTaskHandler,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.isCreateTaskHandler,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-manage\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: updateTaskHandler,\n          className: \"update\",\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteTaskHandler,\n          className: \"delete\",\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.isCloseForm,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"fVOmRd2y3IloWHrKmh9mxT+I79c=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","FormInput","Form","props","values","setValues","id","projectName","taskName","status","inputs","name","type","placeholder","errorMessage","label","pattern","required","onChange","e","target","value","updateTaskHandler","index","tasks","indexOf","task","createTaskHandler","deleteTaskHandler","title","map","input","isCreateTaskHandler","isCloseForm"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"../UI/Button\";\nimport FormInput from \"./FormInput\";\nconst Form = (props) => {\n  const [values, setValues] = useState({\n    id: \"\",\n    projectName: \"\",\n    taskName: \"\",\n    status: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"id\",\n      type: \"number\",\n      placeholder: \"Id\",\n      errorMessage: \"Id should be a number\",\n      label: \"Id\",\n      pattern: \"^[0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"projectName\",\n      type: \"text\",\n      placeholder: \"project name\",\n      errorMessage: \"This field cannot be left empty.\",\n      label: \"Project name\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"taskName\",\n      type: \"text\",\n      placeholder: \"Task name\",\n      errorMessage: \"This field cannot be left empty.\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      label: \"Task name\",\n      required: true,\n    },\n    {\n      id: 4,\n      name: \"status\",\n      type: \"text\",\n      placeholder: \"Status\",\n      errorMessage: \"You must choose a status for the task.\",\n      label: \"Status\",\n      pattern: \"inactive\" || \"active\" || \"in-progress\",\n      required: true,\n    },\n  ];\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const updateTaskHandler = () => {\n    const index = props.tasks.indexOf(props.task);\n    props.tasks[index] = {\n      id: values.id,\n      projectName: values.projectName,\n      taskName: values.taskName,\n      status: values.status,\n    };\n  };\n  const createTaskHandler = () => {};\n  const deleteTaskHandler = () => {};\n  return (\n    <div className=\"modal\">\n      <form className=\"form\">\n        <h1 className=\"title\">{props.title}</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={\n              props.title === \"Update Task\"\n                ? props.task[input.name]\n                : values[input.name]\n            }\n            onChange={onChange}\n          />\n        ))}\n        {props.title === \"Create Task\" ? (\n          <div className=\"buttons-create\">\n            <Button onClick={createTaskHandler}>Create Task</Button>\n            <Button onClick={props.isCreateTaskHandler}>Close form</Button>\n          </div>\n        ) : (\n          <div className=\"buttons-manage\">\n            <Button onClick={updateTaskHandler} className=\"update\">\n              Update Task\n            </Button>\n            <Button onClick={deleteTaskHandler} className=\"delete\">\n              Delete Task\n            </Button>\n            <Button onClick={props.isCloseForm}>Close form</Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}