{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const {\n    isManage,\n    setIsManage\n  } = useState(false);\n\n  const manageTask = () => {\n    props.manageTaskHandler();\n    setIsManage(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    onClick: manageTask,\n    className: isManage ? \"highlight\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.projectName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"W+chw0vlv9klQEhc1z6BzKGz0TU=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Task","props","isManage","setIsManage","manageTask","manageTaskHandler","prevState","id","projectName","taskName","status"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Task.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport './Task.css';\nconst Task = (props) => {\n\n    const {isManage,setIsManage} = useState(false);\n\n    const manageTask = () =>{\n        props.manageTaskHandler();\n        setIsManage((prevState) => !prevState);\n    }\n\n  return (\n    <tr onClick={manageTask} className = { isManage? \"highlight\": \"\"}>\n      <td>{props.id}</td>\n      <td>{props.projectName}</td>\n      <td>{props.taskName}</td>\n      <td>{props.status}</td>\n    </tr>\n  );\n};\n\nexport default Task;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB,MAAM;IAACC,QAAD;IAAUC;EAAV,IAAyBJ,QAAQ,CAAC,KAAD,CAAvC;;EAEA,MAAMK,UAAU,GAAG,MAAK;IACpBH,KAAK,CAACI,iBAAN;IACAF,WAAW,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAAX;EACH,CAHD;;EAKF,oBACE;IAAI,OAAO,EAAEF,UAAb;IAAyB,SAAS,EAAKF,QAAQ,GAAE,WAAF,GAAe,EAA9D;IAAA,wBACE;MAAA,UAAKD,KAAK,CAACM;IAAX;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKN,KAAK,CAACO;IAAX;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAKP,KAAK,CAACQ;IAAX;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,UAAKR,KAAK,CAACS;IAAX;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAjBD;;GAAMV,I;;KAAAA,I;AAmBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}