{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"../UI/Button\";\nimport FormInput from \"./FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    id: props.title === \"Update Task\" ? props.id : \"\",\n    projectName: \"\",\n    TaskName: \"\",\n    status: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"id\",\n    type: \"number\",\n    placeholder: \"Id\",\n    errorMessage: \"Id should be a number\",\n    label: \"Id\",\n    pattern: \"^[0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"projectName\",\n    type: \"text\",\n    placeholder: \"project name\",\n    errorMessage: \"This field cannot be left empty.\",\n    label: \"Project name\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 3,\n    name: \"taskName\",\n    type: \"text\",\n    placeholder: \"Task name\",\n    errorMessage: \"This field cannot be left empty.\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    label: \"Task name\",\n    required: true\n  }, {\n    id: 4,\n    name: \"status\",\n    type: \"text\",\n    placeholder: \"Status\",\n    errorMessage: \"You must choose a status for the task.\",\n    label: \"Status\",\n    pattern: \"inactive\" || \"active\" || \"in-progress\",\n    required: true\n  }];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), props.title === \"Create Task\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-create\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.createTaskHandler,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.createTaskHandler,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-manage\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.createTaskHandler,\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.createTaskHandler,\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.createTaskHandler,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"KWe+Gj4B2U68KabBOSYKrnumNQg=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","FormInput","Form","props","values","setValues","id","title","projectName","TaskName","status","inputs","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value","map","input","createTaskHandler"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"../UI/Button\";\nimport FormInput from \"./FormInput\";\nconst Form = (props) => {\n  const [values, setValues] = useState({\n    id: (props.title===\"Update Task\"? props.id:\"\" :\"\"),\n    projectName: \"\",\n    TaskName: \"\",\n    status: \"\",\n  });\n\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"id\",\n      type: \"number\",\n      placeholder: \"Id\",\n      errorMessage: \"Id should be a number\",\n      label: \"Id\",\n      pattern: \"^[0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"projectName\",\n      type: \"text\",\n      placeholder: \"project name\",\n      errorMessage: \"This field cannot be left empty.\",\n      label: \"Project name\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"taskName\",\n      type: \"text\",\n      placeholder: \"Task name\",\n      errorMessage: \"This field cannot be left empty.\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      label: \"Task name\",\n      required: true,\n    },\n    {\n      id: 4,\n      name: \"status\",\n      type: \"text\",\n      placeholder: \"Status\",\n      errorMessage: \"You must choose a status for the task.\",\n      label: \"Status\",\n      pattern: \"inactive\" || \"active\" || \"in-progress\",\n      required: true,\n    },\n  ];\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"modal\">\n      <form onSubmit={handleSubmit} className=\"form\">\n        <h1 className=\"title\">{props.title}</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        {props.title === \"Create Task\" ? (\n          <div className=\"buttons-create\">\n            <Button onClick={props.createTaskHandler}>Create Task</Button>\n            <Button onClick={props.createTaskHandler}>Close form</Button>\n          </div>\n        ) : (\n          <div className=\"buttons-manage\">\n            <Button onClick={props.createTaskHandler}>Update Task</Button>\n            <Button onClick={props.createTaskHandler}>Delete Task</Button>\n            <Button onClick={props.createTaskHandler}>Close form</Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;IACnCO,EAAE,EAAGH,KAAK,CAACI,KAAN,KAAc,aAAd,GAA6BJ,KAAK,CAACG,EAAnC,GAAsC,EADR;IAEnCE,WAAW,EAAE,EAFsB;IAGnCC,QAAQ,EAAE,EAHyB;IAInCC,MAAM,EAAE;EAJ2B,CAAD,CAApC;EAQA,MAAMC,MAAM,GAAG,CACb;IACEL,EAAE,EAAE,CADN;IAEEM,IAAI,EAAE,IAFR;IAGEC,IAAI,EAAE,QAHR;IAIEC,WAAW,EAAE,IAJf;IAKEC,YAAY,EAAE,uBALhB;IAMEC,KAAK,EAAE,IANT;IAOEC,OAAO,EAAE,eAPX;IAQEC,QAAQ,EAAE;EARZ,CADa,EAWb;IACEZ,EAAE,EAAE,CADN;IAEEM,IAAI,EAAE,aAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,cAJf;IAKEC,YAAY,EAAE,kCALhB;IAMEC,KAAK,EAAE,cANT;IAOEC,OAAO,EAAE,qBAPX;IAQEC,QAAQ,EAAE;EARZ,CAXa,EAqBb;IACEZ,EAAE,EAAE,CADN;IAEEM,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,WAJf;IAKEC,YAAY,EAAE,kCALhB;IAMEE,OAAO,EAAE,qBANX;IAOED,KAAK,EAAE,WAPT;IAQEE,QAAQ,EAAE;EARZ,CArBa,EA+Bb;IACEZ,EAAE,EAAE,CADN;IAEEM,IAAI,EAAE,QAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,QAJf;IAKEC,YAAY,EAAE,wCALhB;IAMEC,KAAK,EAAE,QANT;IAOEC,OAAO,EAAE,cAAc,QAAd,IAA0B,aAPrC;IAQEC,QAAQ,EAAE;EARZ,CA/Ba,CAAf;;EA0CA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAIF,CAAD,IAAO;IACtBf,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACgB,CAAC,CAACG,MAAF,CAASX,IAAV,GAAiBQ,CAAC,CAACG,MAAF,CAASC;IAAvC,CAAD,CAAT;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAM,QAAQ,EAAEL,YAAhB;MAA8B,SAAS,EAAC,MAAxC;MAAA,wBACE;QAAI,SAAS,EAAC,OAAd;QAAA,UAAuBhB,KAAK,CAACI;MAA7B;QAAA;QAAA;QAAA;MAAA,QADF,EAEGI,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD,OAEMA,KAFN;QAGE,KAAK,EAAEtB,MAAM,CAACsB,KAAK,CAACd,IAAP,CAHf;QAIE,QAAQ,EAAEU;MAJZ,GACOI,KAAK,CAACpB,EADb;QAAA;QAAA;QAAA;MAAA,QADD,CAFH,EAUGH,KAAK,CAACI,KAAN,KAAgB,aAAhB,gBACC;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE,QAAC,MAAD;UAAQ,OAAO,EAAEJ,KAAK,CAACwB,iBAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAQ,OAAO,EAAExB,KAAK,CAACwB,iBAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,gBAMC;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE,QAAC,MAAD;UAAQ,OAAO,EAAExB,KAAK,CAACwB,iBAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAQ,OAAO,EAAExB,KAAK,CAACwB,iBAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,MAAD;UAAQ,OAAO,EAAExB,KAAK,CAACwB,iBAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CAtFD;;GAAMzB,I;;KAAAA,I;AAwFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}