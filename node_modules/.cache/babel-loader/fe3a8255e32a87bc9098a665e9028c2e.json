{"ast":null,"code":"var _jsxFileName = \"/home/zed65/Desktop/react-task/my-app/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"./UI/Button\";\nimport FormInput from \"./FormInput\";\nimport { useUpdateTasks } from \"./Context/task-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const setTasks = useUpdateTasks();\n  const [values, setValues] = useState({\n    id: props.title === \"Update Task\" ? props.task.id : \"\",\n    projectName: props.title === \"Update Task\" ? props.task.projectName : \"\",\n    taskName: props.title === \"Update Task\" ? props.task.taskName : \"\",\n    status: props.title === \"Update Task\" ? props.task.status : \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"id\",\n    type: \"number\",\n    placeholder: \"Id\",\n    errorMessage: \"Id should be a number\",\n    label: \"Id\",\n    pattern: \"^[0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"projectName\",\n    type: \"text\",\n    placeholder: \"project name\",\n    errorMessage: \"This field cannot be left empty.\",\n    label: \"Project name\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    required: true\n  }, {\n    id: 3,\n    name: \"taskName\",\n    type: \"text\",\n    placeholder: \"Task name\",\n    errorMessage: \"This field cannot be left empty.\",\n    pattern: \"^[A-Za-z0-9]{1,16}$\",\n    label: \"Task name\",\n    required: true\n  }, {\n    id: 4,\n    name: \"status\",\n    type: \"text\",\n    placeholder: \"Status\",\n    errorMessage: \"You must choose a status for the task.\",\n    label: \"Status\",\n    pattern: \"inactive\" || \"active\" || \"in-progress\",\n    required: true\n  }];\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const updateTaskHandler = () => {\n    setTasks(tasks => {\n      const index = tasks.indexOf(props.task);\n      props.tasks[index] = {\n        id: values.id,\n        projectName: values.projectName,\n        taskName: values.taskName,\n        status: values.status\n      };\n    });\n    props.isCloseForm();\n    props.showTaskHandler();\n  };\n\n  const createTaskHandler = () => {\n    const newTask = {\n      id: values.id,\n      projectName: values.projectName,\n      taskName: values.taskName,\n      status: values.status\n    };\n    props.tasks.push(newTask);\n    props.isCreateTaskHandler();\n  };\n\n  const deleteTaskHandler = () => {\n    const index = props.tasks.indexOf(props.task);\n    props.tasks.splice(index, 1);\n    props.isCloseForm();\n    props.showTaskHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), props.title === \"Create Task\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-create\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: createTaskHandler,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.isCreateTaskHandler,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-manage\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: updateTaskHandler,\n          className: \"update\",\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteTaskHandler,\n          className: \"delete\",\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.isCloseForm,\n          children: \"Close form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"zLauUtzcxJG0EquGd+mnJKsYBLk=\", false, function () {\n  return [useUpdateTasks];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","FormInput","useUpdateTasks","Form","props","setTasks","values","setValues","id","title","task","projectName","taskName","status","inputs","name","type","placeholder","errorMessage","label","pattern","required","onChange","e","target","value","updateTaskHandler","tasks","index","indexOf","isCloseForm","showTaskHandler","createTaskHandler","newTask","push","isCreateTaskHandler","deleteTaskHandler","splice","map","input"],"sources":["/home/zed65/Desktop/react-task/my-app/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"./UI/Button\";\nimport FormInput from \"./FormInput\";\nimport {useUpdateTasks } from \"./Context/task-context\";\n\nconst Form = (props) => {\n  const setTasks = useUpdateTasks();\n\n  const [values, setValues] = useState({\n    id: props.title === \"Update Task\" ? props.task.id : \"\",\n    projectName: props.title === \"Update Task\" ? props.task.projectName : \"\",\n    taskName: props.title === \"Update Task\" ? props.task.taskName : \"\",\n    status: props.title === \"Update Task\" ? props.task.status : \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"id\",\n      type: \"number\",\n      placeholder: \"Id\",\n      errorMessage: \"Id should be a number\",\n      label: \"Id\",\n      pattern: \"^[0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"projectName\",\n      type: \"text\",\n      placeholder: \"project name\",\n      errorMessage: \"This field cannot be left empty.\",\n      label: \"Project name\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"taskName\",\n      type: \"text\",\n      placeholder: \"Task name\",\n      errorMessage: \"This field cannot be left empty.\",\n      pattern: \"^[A-Za-z0-9]{1,16}$\",\n      label: \"Task name\",\n      required: true,\n    },\n    {\n      id: 4,\n      name: \"status\",\n      type: \"text\",\n      placeholder: \"Status\",\n      errorMessage: \"You must choose a status for the task.\",\n      label: \"Status\",\n      pattern: \"inactive\" || \"active\" || \"in-progress\",\n      required: true,\n    },\n  ];\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const updateTaskHandler = () => {\n    setTasks((tasks) => {\n      const index = tasks.indexOf(props.task);\n\n      props.tasks[index] = {\n        id: values.id,\n        projectName: values.projectName,\n        taskName: values.taskName,\n        status: values.status,\n      };\n    });\n\n    props.isCloseForm();\n    props.showTaskHandler();\n  };\n  const createTaskHandler = () => {\n    const newTask = {\n      id: values.id,\n      projectName: values.projectName,\n      taskName: values.taskName,\n      status: values.status,\n    };\n    props.tasks.push(newTask);\n\n    props.isCreateTaskHandler();\n  };\n  const deleteTaskHandler = () => {\n    const index = props.tasks.indexOf(props.task);\n    props.tasks.splice(index, 1);\n\n    props.isCloseForm();\n    props.showTaskHandler();\n  };\n  return (\n    <div className=\"modal\">\n      <div className=\"form\">\n        <h1 className=\"title\">{props.title}</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        {props.title === \"Create Task\" ? (\n          <div className=\"buttons-create\">\n            <Button onClick={createTaskHandler}>Create Task</Button>\n            <Button onClick={props.isCreateTaskHandler}>Close form</Button>\n          </div>\n        ) : (\n          <div className=\"buttons-manage\">\n            <Button onClick={updateTaskHandler} className=\"update\">\n              Update Task\n            </Button>\n            <Button onClick={deleteTaskHandler} className=\"delete\">\n              Delete Task\n            </Button>\n            <Button onClick={props.isCloseForm}>Close form</Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}